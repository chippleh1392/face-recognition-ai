{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","App.js","registerServiceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boxes","className","id","alt","src","width","heigh","map","box","key","topRow","style","top","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","onClick","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","handleKeyPress","e","this","htmlFor","type","name","onChange","onKeyPress","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","onButtonSubmit","app","Clarifai","App","apiKey","initialState","input","route","entries","joined","data","models","predict","FACE_DETECT_MODEL","count","Object","assign","displayFaceBox","calculateFaceLocation","catch","err","console","log","image","document","getElementById","Number","height","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","params","myParameters","Helmet","charSet","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aac71068.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"inputimage\" alt=\"\" src={imageUrl} width=\"500px\" heigh=\"auto\" />\r\n        {boxes.map(box => {\r\n          return (\r\n            <div\r\n              key={box.topRow}\r\n              className=\"bounding-box\"\r\n              style={{\r\n                top: box.topRow,\r\n                right: box.rightCol,\r\n                bottom: box.bottomRow,\r\n                left: box.leftCol\r\n              }}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <ul className=\"nav-links\">\r\n          <li className=\"item\" onClick={() => onRouteChange(\"signout\")}>\r\n            <a>Sign Out</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav className=\"nav\">\r\n        <ul className=\"nav-links\">\r\n          <li className=\"item\" onClick={() => onRouteChange(\"signin\")}>\r\n            <a>Sign In</a>\r\n          </li>\r\n          <li className=\"./image\" onClick={() => onRouteChange(\"register\")}>\r\n            <a>Register</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://misty-waterfall-9516.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.onSubmitSignIn();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 white-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 white input-reset ba b--white bg-transparent grow\r\n                pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign In\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"register\")}\r\n                className=\"f6 link dim white db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://misty-waterfall-9516.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 white ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 white lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset white ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label\r\n                  className=\"db fw6 white lh-copy f6\"\r\n                  htmlFor=\"email-address\"\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent white hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 white lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset white ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset white ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"Instructions\">\r\n        {\"Instructions: Enter the URL of an image and click Find Face.\"}\r\n        <br />\r\n        {\" Facial Recognition AI will detect any faces in the picture.\"}\r\n      </p>\r\n      <div className=\"form center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"tex\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-red\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Find Face\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Particles from \"react-particles-js\";\r\nimport Clarifai from \"clarifai\";\r\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Signin from \"./components/Signin/Signin\";\r\nimport Register from \"./components/Register/Register\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport \"./App.css\";\r\nimport myParameters from \"./particlesjs-config.json\";\r\n\r\n//You must add your own API key here from Clarifai.\r\nconst app = new Clarifai.App({\r\n  apiKey: \"3dba087793aa45afa2bf7740b930b086\"\r\n});\r\n\r\n// const particlesOptions = {\r\n//   particles: {\r\n//     number: {\r\n//       value: 30,\r\n//       density: {\r\n//         enable: true,\r\n//         value_area: 800\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  boxes: [],\r\n  route: \"signin\",\r\n  isSignedIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = data => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    app.models\r\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n      .then(response => {\r\n        if (response) {\r\n          fetch(\"https://facial-recognition-back.herokuapp.com/image\", {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count }));\r\n            });\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  calculateFaceLocation = data => {\r\n    const image = document.getElementById(\"inputimage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return data.outputs[0].data.regions.map(face => {\r\n      const clarifaiFace = face.region_info.bounding_box;\r\n      return {\r\n        leftCol: clarifaiFace.left_col * width,\r\n        topRow: clarifaiFace.top_row * height,\r\n        rightCol: width - clarifaiFace.right_col * width,\r\n        bottomRow: height - clarifaiFace.bottom_row * height\r\n      };\r\n    });\r\n  };\r\n\r\n  displayFaceBox = boxes => {\r\n    this.setState({ boxes: boxes });\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === \"signout\") {\r\n      this.setState(initialState);\r\n    } else if (route === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, boxes } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={myParameters} />\r\n        <div className=\"head\">\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Facial Recognition</title>\r\n          </Helmet>\r\n        </div>\r\n        {/* <Particles className=\"particles\" params={particlesOptions} /> */}\r\n        <Navigation\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {route === \"home\" ? (\r\n          <div>\r\n            {/* <Logo /> */}\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}