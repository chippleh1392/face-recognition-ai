{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","App.js","registerServiceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boxes","className","id","alt","src","width","heigh","map","box","key","topRow","style","top","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","onClick","href","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","handleKeyPress","e","this","data-validate","type","name","onChange","onKeyPress","data-placeholder","React","Component","Register","onNameChange","console","log","ImageLinkForm","onInputChange","onButtonSubmit","app","Clarifai","App","apiKey","initialState","input","route","entries","joined","data","models","predict","FACE_DETECT_MODEL","count","Object","assign","displayFaceBox","calculateFaceLocation","catch","err","image","document","getElementById","Number","height","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kaA2BeA,G,MAxBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACnC,OACE,yBAAKC,UAAU,IACb,yBAAKA,UAAU,IACb,yBAAKC,GAAG,aAAaC,IAAI,GAAGC,IAAKL,EAAUM,MAAM,QAAQC,MAAM,SAC9DN,EAAMO,KAAI,SAAAC,GACT,OACE,yBACEC,IAAKD,EAAIE,OACTT,UAAU,eACVU,MAAO,CACLC,IAAKJ,EAAIE,OACTG,MAAOL,EAAIM,SACXC,OAAQP,EAAIQ,UACZC,KAAMT,EAAIU,kBC4BXC,G,MA1CI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cACpB,OADoD,EAAjBC,WAG/B,yBAAKpB,UAAU,UACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,OAAOqB,QAAS,kBAAMF,EAAc,aAChD,0CAON,yBAAKnB,UAAU,UACb,uBAAGsB,KAAK,IAAItB,UAAU,QAAtB,QAGA,wBAAIA,UAAU,YACZ,4BACE,uBACEsB,KAAK,IACLtB,UAAU,YACVqB,QAAS,kBAAMF,EAAc,YAH/B,UAQF,4BACE,uBACEG,KAAK,IACLtB,UAAU,YACVqB,QAAS,kBAAMF,EAAc,cAH/B,gBCmGGI,G,wBA7Hb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SATzB,EAYnBC,iBAAmB,SAAAL,GACjB,EAAKC,SAAS,CAAEK,eAAgBN,EAAMG,OAAOC,SAb5B,EAgBnBG,eAAiB,WACfC,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,EAAKC,MAAMb,YAClBc,SAAU,EAAKD,MAAMT,mBAGtBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAA,EAAK7C,KACP,EAAKuB,MAAMuB,SAASD,GACpB,EAAKtB,MAAML,cAAc,aA7Bd,EAkCnB6B,eAAiB,SAAAC,GACD,UAAVA,EAAEzC,KACJ,EAAKyB,kBAlCP,EAAKQ,MAAQ,CACXb,YAAa,GACbI,eAAgB,IAJD,E,sEAwCT,IACAb,EAAkB+B,KAAK1B,MAAvBL,cACR,OACE,yBAAKnB,UAAU,WACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,8BAAhB,WAEA,yBACEA,UAAU,+BACVmD,gBAAc,yBAEd,2BACEnD,UAAU,WACVoD,KAAK,OACLC,KAAK,QACLC,SAAUJ,KAAKzB,cACf8B,WAAYL,KAAKF,iBAEnB,0BACEhD,UAAU,iBACVwD,mBAAiB,WAIrB,yBACExD,UAAU,+BACVmD,gBAAc,kBAEd,0BAAMnD,UAAU,iBACd,uBAAGA,UAAU,mBAEf,2BACEA,UAAU,WACVoD,KAAK,WACLC,KAAK,OACLC,SAAUJ,KAAKnB,iBACfwB,WAAYL,KAAKF,iBAEnB,0BACEhD,UAAU,iBACVwD,mBAAiB,cAIrB,yBAAKxD,UAAU,+BACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wBACf,4BACEA,UAAU,oBACVqB,QAAS6B,KAAKjB,gBAFhB,WASJ,yBAAKjC,UAAU,uBACb,0BAAMA,UAAU,QAAhB,0BAEA,uBAAGA,UAAU,OAAOsB,KAAK,KAAzB,mBAKF,yBAAKtB,UAAU,eACb,0BAAMA,UAAU,QAAhB,gCAEA,uBACEA,UAAU,OACVsB,KAAK,IACLD,QAAS,kBAAMF,EAAc,cAH/B,oB,GA9GKsC,IAAMC,YCwIZC,E,YAxIb,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRoC,aAAe,SAAAlC,GACb,EAAKC,SAAS,CAAE0B,KAAM3B,EAAMG,OAAOC,SAVlB,EAanBL,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEa,MAAOd,EAAMG,OAAOC,SAdnB,EAiBnBC,iBAAmB,SAAAL,GACjB,EAAKC,SAAS,CAAEe,SAAUhB,EAAMG,OAAOC,SAlBtB,EAqBnBG,eAAiB,WACfC,MAAM,yDAA0D,CAC9DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,SACrBW,KAAM,EAAKZ,MAAMY,SAGlBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACAA,EAAK7C,IACP,EAAKuB,MAAMuB,SAASD,GACpB,EAAKtB,MAAML,cAAc,SAEzB0C,QAAQC,IAAI,4BArCD,EA0CnBd,eAAiB,SAAAC,GACD,UAAVA,EAAEzC,KACJ,EAAKyB,kBA1CP,EAAKQ,MAAQ,CACXD,MAAO,GACPE,SAAU,GACVW,KAAM,IALS,E,sEAgDT,IACAlC,EAAkB+B,KAAK1B,MAAvBL,cACR,OACE,yBAAKnB,UAAU,WACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,8BAAhB,aAEA,yBAAKA,UAAU,gCACb,2BACEA,UAAU,WACVoD,KAAK,OACLC,KAAK,OACLC,SAAUJ,KAAKU,aACfL,WAAYL,KAAKF,iBAEnB,0BAAMhD,UAAU,iBAAiBwD,mBAAiB,UAGpD,yBACExD,UAAU,+BACVmD,gBAAc,yBAEd,2BACEnD,UAAU,WACVoD,KAAK,OACLC,KAAK,QACLC,SAAUJ,KAAKzB,cACf8B,WAAYL,KAAKF,iBAEnB,0BACEhD,UAAU,iBACVwD,mBAAiB,WAIrB,yBACExD,UAAU,+BACVmD,gBAAc,kBAEd,0BAAMnD,UAAU,iBACd,uBAAGA,UAAU,mBAEf,2BACEA,UAAU,WACVoD,KAAK,WACLC,KAAK,OACLC,SAAUJ,KAAKnB,iBACfwB,WAAYL,KAAKF,iBAEnB,0BACEhD,UAAU,iBACVwD,mBAAiB,cAIrB,yBAAKxD,UAAU,+BACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wBACf,4BACEA,UAAU,oBACVqB,QAAS6B,KAAKjB,gBAFhB,aASJ,yBAAKjC,UAAU,uBACb,0BAAMA,UAAU,QAAhB,6BAEA,uBACEA,UAAU,OACVsB,KAAK,IACLD,QAAS,kBAAMF,EAAc,YAH/B,kB,GAzHOsC,IAAMC,WCoBdK,G,MApBO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACtC,OACE,6BACE,uBAAGjE,UAAU,gBACV,+DACD,6BACC,gEAEH,yBAAKA,UAAU,eACb,yBAAKA,UAAU,IACb,2BAAOA,UAAU,GAAGoD,KAAK,MAAME,SAAUU,IACzC,4BAAQZ,KAAK,SAASpD,UAAU,GAAGqB,QAAS4C,GAA5C,kBCJJC,G,MAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,sCAGJC,EAAe,CACnBC,MAAO,GACPzE,SAAU,GACVC,MAAO,GACPyE,MAAO,SACPpD,YAAY,EACZ0B,KAAM,CACJ7C,GAAI,GACJoD,KAAM,GACNb,MAAO,GACPiC,QAAS,EACTC,OAAQ,KA0GGN,E,YArGb,aAAe,IAAD,8BACZ,+CAIFrB,SAAW,SAAA4B,GACT,EAAKhD,SAAS,CACZmB,KAAM,CACJ7C,GAAI0E,EAAK1E,GACToD,KAAMsB,EAAKtB,KACXb,MAAOmC,EAAKnC,MACZiC,QAASE,EAAKF,QACdC,OAAQC,EAAKD,WAZL,EAiBdV,cAAgB,SAAAtC,GACd,EAAKC,SAAS,CAAE4C,MAAO7C,EAAMG,OAAOC,SAlBxB,EAqBdmC,eAAiB,WACf,EAAKtC,SAAS,CAAE7B,SAAU,EAAK2C,MAAM8B,QACrCL,EAAIU,OACDC,QAAQV,IAASW,kBAAmB,EAAKrC,MAAM8B,OAC/C5B,MAAK,SAAAC,GACAA,GACFV,MAAM,sDAAuD,CAC3DC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBtC,GAAI,EAAKwC,MAAMK,KAAK7C,OAGrB0C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAoC,GACJ,EAAKpD,SAASqD,OAAOC,OAAO,EAAKxC,MAAMK,KAAM,CAAE2B,QAASM,QAG9D,EAAKG,eAAe,EAAKC,sBAAsBvC,OAEhDwC,OAAM,SAAAC,GAAG,OAAIxB,QAAQC,IAAIuB,OAzChB,EA4CdF,sBAAwB,SAAAR,GACtB,IAAMW,EAAQC,SAASC,eAAe,cAChCpF,EAAQqF,OAAOH,EAAMlF,OACrBsF,EAASD,OAAOH,EAAMI,QAC5B,OAAOf,EAAKgB,QAAQ,GAAGhB,KAAKiB,QAAQtF,KAAI,SAAAuF,GACtC,IAAMC,EAAeD,EAAKE,YAAYC,aACtC,MAAO,CACL/E,QAAS6E,EAAaG,SAAW7F,EACjCK,OAAQqF,EAAaI,QAAUR,EAC/B7E,SAAUT,EAAQ0F,EAAaK,UAAY/F,EAC3CW,UAAW2E,EAASI,EAAaM,WAAaV,OAtDtC,EA2DdR,eAAiB,SAAAnF,GACf,EAAK4B,SAAS,CAAE5B,MAAOA,KA5DX,EA+DdoB,cAAgB,SAAAqD,GACA,YAAVA,EACF,EAAK7C,SAAS2C,GACK,SAAVE,GACT,EAAK7C,SAAS,CAAEP,YAAY,IAE9B,EAAKO,SAAS,CAAE6C,MAAOA,KAnEvB,EAAK/B,MAAQ6B,EAFD,E,sEAwEJ,IAAD,EACwCpB,KAAKT,MAA5CrB,EADD,EACCA,WAAYtB,EADb,EACaA,SAAU0E,EADvB,EACuBA,MAAOzE,EAD9B,EAC8BA,MACrC,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CACEoB,WAAYA,EACZD,cAAe+B,KAAK/B,gBAEX,SAAVqD,EACC,6BACE,kBAAC,EAAD,CACER,cAAed,KAAKc,cACpBC,eAAgBf,KAAKe,iBAEvB,kBAAC,EAAD,CAAiBlE,MAAOA,EAAOD,SAAUA,KAE/B,WAAV0E,EACF,kBAAC,EAAD,CAAQzB,SAAUG,KAAKH,SAAU5B,cAAe+B,KAAK/B,gBAErD,kBAAC,EAAD,CACE4B,SAAUG,KAAKH,SACf5B,cAAe+B,KAAK/B,qB,GA9FduC,aCnBZ2C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjE,MAAK,SAAAqE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzE,QACfoE,UAAUC,cAAcO,WAK1BxD,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBsB,OAAM,SAAAkC,GACLzD,QAAQyD,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASjC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBqB,UAAW,CAGzE,GADkB,IAAIY,IAAIC,IAAwBnB,OAAOC,UAC3CmB,SAAWpB,OAAOC,SAASmB,OAIvC,OAGFpB,OAAOqB,iBAAiB,QAAQ,WAC9B,IAAMhB,EAAK,UAAMc,IAAN,sBAEPrB,EAwCV,SAAiCO,GAE/B1E,MAAM0E,GACHjE,MAAK,SAAAC,GAGkB,MAApBA,EAASiF,SACuD,IAAhEjF,EAASR,QAAQ0F,IAAI,gBAAgBC,QAAQ,cAG7ClB,UAAUC,cAAckB,MAAMrF,MAAK,SAAAqE,GACjCA,EAAaiB,aAAatF,MAAK,WAC7B4D,OAAOC,SAAS0B,eAKpBvB,EAAgBC,MAGnBxB,OAAM,WACLvB,QAAQC,IACN,oEA5DAqE,CAAwBvB,GAGxBD,EAAgBC,OChCxBwB,K","file":"static/js/main.6d1df65e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"\">\r\n        <img id=\"inputimage\" alt=\"\" src={imageUrl} width=\"500px\" heigh=\"auto\" />\r\n        {boxes.map(box => {\r\n          return (\r\n            <div\r\n              key={box.topRow}\r\n              className=\"bounding-box\"\r\n              style={{\r\n                top: box.topRow,\r\n                right: box.rightCol,\r\n                bottom: box.bottomRow,\r\n                left: box.leftCol\r\n              }}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <ul className=\"nav-links\">\r\n          <li className=\"item\" onClick={() => onRouteChange(\"signout\")}>\r\n            <a>Sign Out</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <a href=\"#\" className=\"logo\">\r\n          logo\r\n        </a>\r\n        <ul className=\"main-nav\">\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              className=\"nav-links\"\r\n              onClick={() => onRouteChange(\"signin\")}\r\n            >\r\n              Login\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              className=\"nav-links\"\r\n              onClick={() => onRouteChange(\"register\")}\r\n            >\r\n              Sign Up\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Signin.css\";\r\nimport \"../../util.css\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://facial-recognition-back.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.onSubmitSignIn();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <div className=\"login100-form validate-form\">\r\n              <span className=\"login100-form-title p-b-26\">Welcome</span>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Valid email is: a@b.c\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.onEmailChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"Email\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter password\"\r\n              >\r\n                <span className=\"btn-show-pass\">\r\n                  <i className=\"zmdi zmdi-eye\"></i>\r\n                </span>\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"pass\"\r\n                  onChange={this.onPasswordChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"Password\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn\">\r\n                <div className=\"wrap-login100-form-btn\">\r\n                  <div className=\"login100-form-bgbtn\"></div>\r\n                  <button\r\n                    className=\"login100-form-btn\"\r\n                    onClick={this.onSubmitSignIn}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"text-center p-t-115\">\r\n                <span className=\"txt1\">Forgot your password? </span>\r\n\r\n                <a className=\"txt2\" href=\"#\">\r\n                  Reset Password\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"text-center\">\r\n                <span className=\"txt1\">Don’t have an account? </span>\r\n\r\n                <a\r\n                  className=\"txt2\"\r\n                  href=\"#\"\r\n                  onClick={() => onRouteChange(\"register\")}\r\n                >\r\n                  Sign Up\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport \"../Signin/Signin.css\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://facial-recognition-back.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          console.log(\"something went wrong\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.onSubmitSignIn();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <div className=\"login100-form validate-form\">\r\n              <span className=\"login100-form-title p-b-26\">New User?</span>\r\n\r\n              <div className=\"wrap-input100 validate-input\">\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={this.onNameChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n                <span className=\"focus-input100\" data-placeholder=\"Name\"></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Valid email is: a@b.c\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.onEmailChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"Email\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter password\"\r\n              >\r\n                <span className=\"btn-show-pass\">\r\n                  <i className=\"zmdi zmdi-eye\"></i>\r\n                </span>\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"pass\"\r\n                  onChange={this.onPasswordChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"Password\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn\">\r\n                <div className=\"wrap-login100-form-btn\">\r\n                  <div className=\"login100-form-bgbtn\"></div>\r\n                  <button\r\n                    className=\"login100-form-btn\"\r\n                    onClick={this.onSubmitSignIn}\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"text-center p-t-115\">\r\n                <span className=\"txt1\">Already have an account? </span>\r\n\r\n                <a\r\n                  className=\"txt2\"\r\n                  href=\"#\"\r\n                  onClick={() => onRouteChange(\"signin\")}\r\n                >\r\n                  Login\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"Instructions\">\r\n        {\"Instructions: Enter the URL of an image and click Find Face.\"}\r\n        <br />\r\n        {\" Facial Recognition AI will detect any faces in the picture.\"}\r\n      </p>\r\n      <div className=\"form center\">\r\n        <div className=\"\">\r\n          <input className=\"\" type=\"tex\" onChange={onInputChange} />\r\n          <button type=\"submit\" className=\"\" onClick={onButtonSubmit}>\r\n            Find Face\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React, { Component } from \"react\";\r\nimport Clarifai from \"clarifai\";\r\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Signin from \"./components/Signin/Signin\";\r\nimport Register from \"./components/Register/Register\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport \"./App.css\";\r\n\r\n// You must add your own API key here from Clarifai.\r\nconst app = new Clarifai.App({\r\n  apiKey: \"3dba087793aa45afa2bf7740b930b086\"\r\n});\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  boxes: [],\r\n  route: \"signin\",\r\n  isSignedIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = data => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    app.models\r\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n      .then(response => {\r\n        if (response) {\r\n          fetch(\"https://facial-recognition-back.herokuapp.com/image\", {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count }));\r\n            });\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  calculateFaceLocation = data => {\r\n    const image = document.getElementById(\"inputimage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return data.outputs[0].data.regions.map(face => {\r\n      const clarifaiFace = face.region_info.bounding_box;\r\n      return {\r\n        leftCol: clarifaiFace.left_col * width,\r\n        topRow: clarifaiFace.top_row * height,\r\n        rightCol: width - clarifaiFace.right_col * width,\r\n        bottomRow: height - clarifaiFace.bottom_row * height\r\n      };\r\n    });\r\n  };\r\n\r\n  displayFaceBox = boxes => {\r\n    this.setState({ boxes: boxes });\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === \"signout\") {\r\n      this.setState(initialState);\r\n    } else if (route === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, boxes } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}